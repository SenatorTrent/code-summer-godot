[gd_scene load_steps=4 format=3 uid="uid://b0w2de2uv1ocx"]

[ext_resource type="Texture2D" uid="uid://capuy0nk2s5do" path="res://frog.png" id="1_f50pn"]

[sub_resource type="GDScript" id="GDScript_ij6vw"]
script/source = "extends CharacterBody2D



var target = Vector2(0, 0)
var grappled = false
var tongueSpring
const SPEED = 800.0
const JUMP_VELOCITY = -800.0
var line = Line2D.new()

func _ready():
	add_child(line)
	tongueSpring = get_node(\"tongueSpring\")

func _input(event):
	# Use is_action_pressed to only accept single taps as input instead of mouse drags.
	if event is InputEventMouseButton:
		if not grappled:
			target = get_global_mouse_position()
			grappled  = true
			print(\"set grappled to true\")
		else:
			grappled = false
			print(\"set grappled to false\")

		

func _physics_process(delta: float) -> void:
	line.clear_points()
	var directional_vec
	if grappled:
		#Raycast to mouse
		var space_state = get_world_2d().direct_space_state
		var query = PhysicsRayQueryParameters2D.create(position, target)
		var result = space_state.intersect_ray(query)
		if result != {}:
			var intersection_position = result[\"position\"]
			directional_vec = Vector2(intersection_position.x - position.x, intersection_position.y - position.y)
			var m = sqrt(directional_vec.x*directional_vec.x + directional_vec.y*directional_vec.y)
			directional_vec.x /= m
			directional_vec.y /= m
			velocity = directional_vec * 1000
			line.add_point(intersection_position)
			line.add_point(position)
			line.width = 4
			line.default_color = Color(1, 0, 0)
	# Add the gravity.
	if not is_on_floor() and not grappled:
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_up\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	elif Input.is_action_just_released(\"ui_up\"):
		if velocity.y < 0:
			velocity.y /= 2

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		if not grappled:
			velocity.x = direction * SPEED
		if grappled:
			velocity.x = direction * SPEED + directional_vec.x * 10
	elif not grappled:
		if is_on_floor():
			velocity.x = move_toward(velocity.x, 0, SPEED / 50)
	move_and_slide()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_f50pn"]
size = Vector2(66.9, 65.2)

[node name="CharacterBody2D2" type="CharacterBody2D"]
script = SubResource("GDScript_ij6vw")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
position = Vector2(-16.5, -7)
scale = Vector2(10, 10)
shape = SubResource("RectangleShape2D_f50pn")

[node name="Sprite2D2" type="Sprite2D" parent="."]
position = Vector2(-4, -4)
scale = Vector2(5, 5)
texture = ExtResource("1_f50pn")
